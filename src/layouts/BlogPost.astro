---
import type { CollectionEntry } from 'astro:content';
import BaseHead from '../components/BaseHead.astro';
import Header from '../components/Header.astro';
import Footer from '../components/Footer.astro';
import FormattedDate from '../components/FormattedDate.astro';
import Document from './Document.astro';

type Props = CollectionEntry<'blog'>['data'];

const { title, summary, publishedAt, lastUpdated, tags } = Astro.props;


/* class={mainBlogTextStyles}
    variants={mainVariants}
    initial="hidden"
    animate="visible" 
    
    
      variants={headerVariants}
      initial="hidden"
      animate="visible"*/

const dateBlockStyles = `text-sm pointer-events-none cursor-default -ml-2.5 mt-[3px] -mb-px pl-2.5 pr-[17px] pt-[3px] pb-px`;
const mainBlogTextStyles = `[&>p]:my-5 [&>a]:font-bold [&>small]:text-grey [&>small>p]:my-5 [&>h5]:text-grey`;

---
<Document>
  <head>
    <meta charset="utf-8">
  </head>
  <div>
    <h1
      class="mx-0 mt-[0.9375em] pb-5 font-josefin text-4xl leading-[1.33em] text-[color:var(--accent)]"
    >
      {title}
    </h1>
  </div>

  <div class="pb-2">
    <div class="pb-4">
      <em class={`${dateBlockStyles} mr-3`}>
        Published: {publishedAt}
      </em>
      {lastUpdated && (
        <em class={`${dateBlockStyles} text-green`}>
          Updated: {lastUpdated}
        </em>
      )}
    </div>
    <div class="ml-[-20px]  rounded bg-codeblock p-5 text-2xl shadow-md">
      <p>{summary}</p>
    </div>
  </div>
  <div
  >
  <slot />
  </div>
  <div class="mt-10 flex gap-2.5 text-base">
    Topics:
    {tags &&
      tags.map((item) => (
        <span
          class="rounded bg-codeblock px-2 py-0 shadow-md"
        >
          {item}
        </span>
      ))}
  </div>
  <div class="mx-0 mb-8 mt-14 flex w-full justify-center rounded bg-codeblock p-3 no-underline shadow">
    <a class="hover:text-accent" href="/blog">
      More notes
    </a>
  </div>
</Document>