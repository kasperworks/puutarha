---
title: Link Depository
publishedAt: '2021-11-01'
lastUpdated: ''
summary: 'Resources, interesting things. Enthusiastically dumped here and examined until deleted or highlighted. Selection sporadically updated.'
tags: ['resources', 'depository']
---

# Table of contents

- [General wisdom](#gandalf)
- [Programming essentials](#essentials)
- [Command line](#command-line)
- [JavaScript](#javascript)
- [Networks](#networks)
- [Snippets & summaries](#snippets)

### Wisdom <a name="gandalf"></a>

- [Expiring vs. permanent skills](https://www.collaborativefund.com/blog/expiring-vs-permanent-skills/)
- [6 harsh truths](https://www.cracked.com/blog/6-harsh-truths-that-will-make-you-better-person?wa_user1=2&wa_user2=Weird+World&wa_user3=blog&wa_user4=companion) that will make you a better person

### Basic essentials <a name="essentials"></a>

- [Starter pack](/blog/starter-pack)
- [VS Code](https://code.visualstudio.com/) is the more or less the standard code editor these days, I like it
- [Git](https://github.com/jlord/git-it-electron) is worth [learning](https://learngitbranching.js.org/), it works well for other kinds of writing too
- [GitHub](https://docs.github.com/en/get-started/quickstart/git-and-github-learning-resources), [GitLab](https://about.gitlab.com/) and [Bitbucket](https://bitbucket.org/product/) are all good platforms for keeping your source code and collaborating
- [Netlify](https://www.netlify.com/) is amazing for all kinds of project hosting, [Vercel](<(https://vercel.com/)>) is just as good
- If you're running Windows, install [Windows Subsystem for Linux](https://docs.microsoft.com/en-us/windows/wsl/install-win10) to get a better grasp on command-line fundamentals
- If you're considering a Linux distro, [Ubuntu](https://releases.ubuntu.com/20.04/) and [Fedora](https://getfedora.org/en/workstation/) are my favorites
- On macOS, I'd recommend [iTerm2](https://iterm2.com/)

### Command line, or lots of z's <a name="command-line"></a>

- The single most-used command-line plugin for me is [z](https://github.com/rupa/z)
- I like it with [oh my zsh](https://ohmyz.sh/) and [powerline10k](https://github.com/romkatv/powerlevel10k)
- If you're more familiar with Node.js than bash, check out [zx](https://github.com/google/zx)
- MIT's [The Missing Semester](https://missing.csail.mit.edu/)

### JS <a name="javascript"></a>

- [SICP in JavaScript](https://sicp.sourceacademy.org/)
- Microsoft's Node [mini-courses](https://docs.microsoft.com/en-gb/learn/paths/build-javascript-applications-nodejs/)

### Networks <a name="networks"></a>

- [How DNS Works comic](https://howdns.works/ep1/)
- [Cloudflare learning center](https://www.cloudflare.com/en-gb/learning/)
- [OSI Model explanation](https://www.freecodecamp.org/news/osi-model-computer-networking-for-beginners/)
- [Beej's Guide to Network Programming](https://beej.us/guide/bgnet/)

#### Network assignments

- [Assignment 1](https://github.com/PrincetonUniversity/COS461-Public/tree/master/assignments/assignment1)
- [Assignment 2](https://www.scs.stanford.edu/10au-cs144/lab/reliable/reliable.html)
- [Assignment 3](https://nptel.ac.in/content/storage2/courses/106105080/pdf/M2L7.pdf)
- [Assignment 4, Wireshark Labs](https://gaia.cs.umass.edu/kurose_ross/wireshark.htm)

### Snippets and summaries of various concepts <a name="snippets"></a>

- React explained in [five visual metaphors](https://maggieappleton.com/reactpotato)
- [Wizard Zines](https://wizardzines.com/comics/)

**TODO: CLEAN UP**

### Security

- [Information Security](https://www.coursera.org/learn/information-security-data)
- [Principles of Secure Coding](https://www.coursera.org/learn/secure-coding-principles)
- [Identifying Security Vulnerabilities](https://www.coursera.org/learn/identifying-security-vulnerabilities)
- [Wisconsin Security Course](https://research.cs.wisc.edu/mist/SoftwareSecurityCourse/)

### Python

- Crash course book
- Data science book
- [Data analysis with Python, HY](https://csmastersuh.github.io/data_analysis_with_python_2020/#)
- [Algorithms, Udacity](https://www.udacity.com/course/data-structures-and-algorithms-in-python--ud513)
- [Machine learning](https://developers.google.com/machine-learning/crash-course/prereqs-and-prework)
- [Deep Learning Specialization course](https://www.coursera.org/specializations/deep-learning)
- [Introduction to Statistical Learning](http://faculty.marshall.usc.edu/gareth-james/ISL/)

### Miscellaneous

- [Visualization with D3.js](https://observablehq.com/@d3/learn-d3)
- [Power Searching With Google](http://www.powersearchingwithgoogle.com/)
- [TypeScript Deep Dive](https://basarat.gitbook.io/typescript/)
- [freeCodeCamp](https://www.freecodecamp.org/learn/)
- [Makeover Monday, datasets for visualization](https://www.makeovermonday.co.uk/)
- [flexbox.io](https://flexbox.io/)
- [CSS animating](https://www.youtube.com/watch?v=N5EW4HnF6FU&app=desktop)
- [How To Ask Questions The Smart Way](http://www.catb.org/~esr/faqs/smart-questions.html)
- [PlantUML](https://plantuml.com/)
- [Eleventy](https://www.11ty.dev/)
- [Sanity.io blog starter](https://www.sanity.io/guides/how-to-get-started-with-the-11ty-eleventy-blog-starter)
- [Cloud training at Linux Academy](https://linuxacademy.com/)
- [Learning how to learn](https://www.coursera.org/learn/learning-how-to-learn#syllabus)
- [Digital Ocean Tutorials](https://www.digitalocean.com/community/tags)
- [Project-based learning](https://github.com/tuvtran/project-based-learning/blob/master/README.md#javascript)
- [Chingu projects](https://www.chingu.io/)
- [Dynamic Programming](https://www.youtube.com/playlist?list=PLVrpF4r7WIhTT1hJqZmjP10nxsmrbRvlf)
- [javascript.info](https://javascript.info/)
- [JavaScript Allonge](https://leanpub.com/javascriptallongesix/read)
- Tailwind CSS
- Look into NGINX
- Look into Docker
- Look into Nest.js
- Look into dynamic programming and matrix manipulation

## My stuff

- [GitHub repos](https://github.com/neliraituri?tab=repositories)
- [neliraituri.github.io](https://neliraituri.github.io)

## Other stuff

- [DevDocs](https://devdocs.io/)
  [Advanced CSS & Sass](https://www.udemy.com/course/advanced-css-and-sass/learn/lecture/)\* [Atomic Design](https://atomicdesign.bradfrost.com/chapter-1/)
- [This Is Responsive](https://bradfrost.github.io/this-is-responsive/index.html)
- [State of JS](https://stateofjs.com/)
- [Stack Overflow survey](https://insights.stackoverflow.com/survey/2019)
- [Language trends / Stack Overflow](https://insights.stackoverflow.com/trends?tags=scala%2Cgo%2Celixir%2Crust)
- [Redmonk survey](https://redmonk.com/sogrady/2020/02/28/language-rankings-1-20/)
- [OSSU](https://github.com/ossu/computer-science)
- [Teach Yourself CS](https://teachyourselfcs.com/)
- [HackerRank](https://www.hackerrank.com/)
- [Helsingin yliopisto](https://courses.helsinki.fi/fi/avoin-yliopisto/opinnot/tietojenk%C3%A4sittelytiede)
- [Thoughtworks languages and frameworks radar](https://www.thoughtworks.com/radar/languages-and-frameworks)
- [David Walsh blog](https://davidwalsh.name/)
- [CSS Tricks](https://css-tricks.com/)
- [Kent C Dodds blog](https://kentcdodds.com/blog/)
- [Alligator.io](https://alligator.io/)
- [System Design Primer](https://github.com/donnemartin/system-design-primer/blob/master/README.md)

## Git, Shell, Design Patterns

- [Testing with Jest](https://www.valentinog.com/blog/jest/)
- [Udemy Full Stack](https://www.udemy.com/course/node-with-react-fullstack-web-development/learn/lecture/)
- [Codrops Three.js tutorials](https://tympanus.net/codrops/category/tutorials/)
- [Learning JavaScript Design Patterns](https://addyosmani.com/resources/essentialjsdesignpatterns/book/)
- [More Design Patterns](https://refactoring.guru/design-patterns)
- [GitHub's Git Handbook,](https://guides.github.com/introduction/git-handbook/) [branching tutorial](https://learngitbranching.js.org/) [and Atlassian docs](https://www.atlassian.com/git)
- [PowerShell resources](http://ramblingcookiemonster.github.io/Pages/PowerShellResources/index.html) [and official documentation](https://docs.microsoft.com/en-gb/powershell/)

## Fundamentals

- [Excel to MySQL](https://www.coursera.org/specializations/excel-mysql)
- [FCC Data Structures video](https://www.youtube.com/watch?v=RBSGKlAvoiM)
- [Stanford Databases](https://www.edx.org/course/databases-5-sql)
- [CS102 Stanford / Working with Data](https://web.stanford.edu/class/cs102/index.htm)
- [CS109 Data Science / Harvard](https://cs109.github.io/2015/index.html)
- [Architecture of a Database System](https://dsf.berkeley.edu/papers/fntdb07-architecture.pdf)
- [Berkeley CS186 Databases](https://www.youtube.com/user/CS186Berkeley/videos)
- [Stanford Algorithms](https://www.coursera.org/specializations/algorithms)
- [Visualgo](https://visualgo.net/en)
- [Operating Systems Supplement](http://pages.cs.wisc.edu/~shivaram/cs537-sp20/)
- [SICP Berkeley lectures](https://archive.org/details/ucberkeley_webcast_l28HAzKy0N8)
- [Nand to Tetris courses](https://www.nand2tetris.org/)
- [Crafting Interpreters](https://craftinginterpreters.com/contents.html)
- [Parallel programming](https://www.youtube.com/playlist?list=PLGvfHSgImk4aweyWlhBXNF6XISY3um82_)
- [Distributed Systems papers](http://dsrg.pdos.csail.mit.edu/papers/)
- [Mathematics for Computer Science, MIT](https://ocw.mit.edu/courses/electrical-engineering-and-computer-science/6-042j-mathematics-for-computer-science-spring-2015/)
- [Clean Code concepts adapted for Javascript](https://github.com/ryanmcdermott/clean-code-javascript)

## Long-term goals

- MEVN/MERN stack + TypeScript
- Database ting: GraphQL, MongoDB, [SQL](https://sqlbolt.com/), MariaDB
- Data viz pack: Vue/React + D3 + Python + Tableau + SQL
- Big data: [Scala](https://www.coursera.org/learn/progfun1) + Apache Spark, Akka, Scala.js
- Ways of working: Atomic design / BDD, DDD and TDD
- 3D stuff with Three.js
- Linux command line
- Some major cloud services: Azure Cosmos DB, AWS
- Deployment skills
- [Johnny-Five robotics projects](http://johnny-five.io/)

[Harvard CS50](https://www.edx.org/course/cs50s-introduction-to-computer-science) [Helsinki Python MOOC](https://python-k20.mooc.fi/)

Foundations

Projects: roadmap

[Azure basics](https://docs.microsoft.com/en-us/learn/paths/azure-fundamentals/) [Tableau basics](https://www.tableau.com/learn/training/elearning) [Intro to Node.js](https://nodejs.dev/learn/) [Modern JavaScript Bootcamp](https://www.udemy.com/course/javascript-beginners-complete-tutorial/learn/lecture) [Node Microsoft Learn](https://docs.microsoft.com/en-gb/learn/paths/build-javascript-applications-nodejs/) [JavaScript 30](https://javascript30.com/)

But How Do It Know? book [Set Theory](https://www.youtube.com/playlist?list=PL5KkMZvBpo5AH_5GpxMiryJT6Dkj32H6N)

Advanced Beginner

Projects: online resume, blog draft on Gridsome/Netlify

[Beginner's Guide to React](https://egghead.io/courses/the-beginner-s-guide-to-react) [Master Gatsby](https://mastergatsby.com/) [D3 Masterclass](https://www.newline.co/courses/fullstack-d3-masterclass/making-your-first-chart)

[Data Structures & Algorithms](https://www.udemy.com/course/coding-interview-bootcamp-algorithms-and-data-structure/learn/) [Helsinki Databases](https://courses.helsinki.fi/fi/aytkt10004/136509070)

Novice

Projects: football UI with database, revised roadmap

[TinyHouse](https://www.newline.co/courses/tinyhouse-react-masterclass/lesson_0.1-tinyhouse-welcome) [Advanced React & GraphQL](https://advancedreact.com/) [Fullstack React w/ TypeScript](https://www.newline.co/fullstack-react-with-typescript) [The Missing Semester](https://missing.csail.mit.edu/)

[SICP JavaScript](https://source-academy.github.io/sicp/) [Linear Algebra](https://www.youtube.com/playlist?list=PLZHQObOWTQDPD3MizzM2xVFitgF8hE_ab) [Computer Networking](https://www.youtube.com/watch?v=TwnsN6iLWy8&list=PLEAYkSg4uSQ2dr0XO_Nwa5OcdEcaaELSG&index=4) [Operating Systems: Three Easy Pieces](http://pages.cs.wisc.edu/~remzi/OSTEP/)

Competent

Projects: football graphics, summer house portal, stock portal"
